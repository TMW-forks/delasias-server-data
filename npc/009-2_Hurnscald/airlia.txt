// Airlia, daughter of the cemetary caretaker

// Future extensions:
//   * Add banter and random replies for the unlimited subquests
//   * Airlia quest = 2 unlocks options with Fighters of the Undead NPCs (in Cemetery), such as the 'Kill Sir Truk' quest
//   * Airlia quest = 2 unlocks other options, perhaps with future Warrior Guild prospects (this is long term) 

// New Addons by Hawkmoon (captainhaggy@gmail.com)
// 13.12.2009-15.12.2009 for server.thealternateworld.org
// to make Kleopatras gameplay more interesting ;)
//
// subquest 2C: 20 undead ears
// subquest 2D: 20 undead eyes
// subquest 2E: 10 rotten rags
// subquest 2F: 1 dark crystalls
// subquest 2G: 20 Jack O Souls
// subquest 2H: 10 wisp power
// subquest 2I: 10 poltergeist powder
// subquest 2J: 10 spectre powder
// subquest 2K: 10 skulls =)
// Needs: Solution to unlock the Cryptmap (--> Podling)
// 21.12.2009 Added missing if clauses
// 26.12.2009 Exchanged BigWhitePieceOfClay against DarkCrystal
// 28.12.2009 Exchanged CheapPlasticFangs agains JackOSoul
// 30.12.2009 Added another quest, brought back CheapPlasticFangs with their real name: FakeFangs (not the typical standard)
// 30.12.2009 BigWhitePieceOfClay's internal name is: ( ... no joke :( -- so I won't use it.
// 30.12.2009 Player is now warped into the crypt, if he speaks again to Airlia, after the Quest ist solved!


009-2.gat,123,71,0	script	Airlia	108,{
	// Subquest 1a: Caretaker's daughter (initial, once)
	set @LETTER_REWARD_GOLD_INITIAL, 10000;
	set @LETTER_REWARD_EXP_INITIAL, 30000;

	set @Q_STATUS_RECIEVED_FIRST_LETTER, 2;
	set @Q_STATUS_DELIVERED_FIRST_LETTER, 3;

	// Subquest 1b: Continued delivery of letters (unlimited)
	set @LETTER_REWARD_GOLD, 5000;
	set @LETTER_REWARD_EXP, 20000;

	set @Q_STATUS_HAS_NO_NEW_LETTER, 4;
	set @Q_STATUS_HAS_NEW_LETTER, 5;

	// Subquest 2a: Fetch those undead drops (initial, once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_INITIAL, 50;
	set @FETCH_LABEL_INITIAL$, "Bone";
	set @FETCH_REWARD_GOLD_INITIAL, 50000;
	set @FETCH_REWARD_EXP_INITIAL, 500000;

	set @Q_STATUS_HELP_AIRLIA, 1;
	set @Q_STATUS_INITIAL_FETCH_REWARDED, 2;
	set @Q_STATUS_FETCH_2B_REWARDED, 3;
	set @Q_STATUS_FETCH_2C_REWARDED, 4;
	set @Q_STATUS_FETCH_2D_REWARDED, 5;
	set @Q_STATUS_FETCH_2E_REWARDED, 6;
	set @Q_STATUS_FETCH_2F_REWARDED, 7;
	set @Q_STATUS_FETCH_2G_REWARDED, 8;
	set @Q_STATUS_FETCH_2H_REWARDED, 9;
	set @Q_STATUS_FETCH_2I_REWARDED, 10;
	set @Q_STATUS_FETCH_2J_REWARDED, 11;
	set @Q_STATUS_FETCH_2K_REWARDED, 12;
	set @Q_STATUS_FETCH_2L_REWARDED, 13;

	// Subquest 2b: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT, 10;
	set @FETCH_LABEL$, "DiseasedHeart";
	set @FETCH_REWARD_GOLD, 60000;
	set @FETCH_REWARD_EXP, 800000;

	// Subquest 2c: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2C, 20;
	set @FETCH_LABEL_2C$, "UndeadEar";
	set @FETCH_REWARD_GOLD_2C, 50000;
	set @FETCH_REWARD_EXP_2C, 300000;

	// Subquest 2d: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2D, 20;
	set @FETCH_LABEL_2D$, "UndeadEye";
	set @FETCH_REWARD_GOLD_2D, 50000;
	set @FETCH_REWARD_EXP_2D, 300000;

	// Subquest 2e: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2E, 10;
	set @FETCH_LABEL_2E$, "RottenRags";
	set @FETCH_REWARD_GOLD_2E, 50000;
	set @FETCH_REWARD_EXP_2E, 30000;

	// Subquest 2f: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2F, 100;
	set @FETCH_LABEL_2F$, "DarkCrystal";
	set @FETCH_REWARD_GOLD_2F, 150000;
	set @FETCH_REWARD_EXP_2F, 200000;

	// Subquest 2g: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2G, 50;
	set @FETCH_LABEL_2G$, "JackOSoul";
	set @FETCH_REWARD_GOLD_2G, 500000;
	set @FETCH_REWARD_EXP_2G, 2000000;

	// Subquest 2h: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2H, 10;
	set @FETCH_LABEL_2H$, "WispPowder";
	set @FETCH_REWARD_GOLD_2H, 250000;
	set @FETCH_REWARD_EXP_2H, 250000;

	// Subquest 2i: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2I, 10;
	set @FETCH_LABEL_2I$, "PoltergeistPowder";
	set @FETCH_REWARD_2I, 250000;
	set @FETCH_REWARD_EXP_2I, 250000;

	// Subquest 2j: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2J, 10;
	set @FETCH_LABEL_2J$, "SpectrePowder";
	set @FETCH_REWARD_GOLD_2J, 250000;
	set @FETCH_REWARD_EXP_2J, 250000;

	// Subquest 2k: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2K, 10;
	set @FETCH_LABEL_2K$, "Skull";  // wrote "Skulls" instead of "Skull" - damned me
	set @FETCH_REWARD_GOLD_2K, 150000;
	set @FETCH_REWARD_EXP_2K, 300000;
	
	// Subquest 2l: Fetch those undead drops (once)
	// TODO: Set sane values below
	set @FETCH_AMOUNT_2L, 10;
	set @FETCH_LABEL_2L$, "FakeFangs";
	set @FETCH_REWARD_GOLD_2L, 1000000;
	set @FETCH_REWARD_EXP_2L, 1000000;
	

	if (QUEST_Airlia >= @Q_STATUS_FETCH_2B_REWARDED) goto L_Fetch;
	if (QUEST_Airlia == @Q_STATUS_INITIAL_FETCH_REWARDED) goto L_Rewarded;
	if (QUEST_Airlia == @Q_STATUS_HELP_AIRLIA) goto L_Fetch;



	if (QUEST_Graveyard_Caretaker > @Q_STATUS_RECIEVED_FIRST_LETTER) goto L_Airlia_intro;

L_Caretaker:
	mes "[Airlia]";
	mes "\"Greetings. Do you need a housing permit, or to license your mount?\"";
	next;

	if (QUEST_Graveyard_Caretaker < @Q_STATUS_RECIEVED_FIRST_LETTER)
		menu
			"Sorry, no.", -,
			"My what?", L_Caretaker_mount;

	if (QUEST_Graveyard_Caretaker == @Q_STATUS_RECIEVED_FIRST_LETTER)
		menu
			"Sorry, no.", -,
			"I have a letter from your father.", L_Caretaker_first_reward,
			"My what?", L_Caretaker_mount;

	mes "[Airlia]";
	mes "\"Nobody ever does...\"";
	close;

L_Caretaker_mount:
	// The mention of mounts will certainly gather some interest from players,
	// this section may be extended.
	close;

L_Caretaker_first_reward:
	mes "[Airlia]";
	mes "\"Oh! Thank you very, very much! Please take this for your trouble.\"";
	if (@LETTER_REWARD_GOLD_INITIAL > 0)
		mes "[" + @LETTER_REWARD_GOLD_INITIAL + " GP]";
	if (@LETTER_REWARD_EXP_INITIAL > 0)
		mes "[" + @LETTER_REWARD_EXP_INITIAL + " experience points]";

	set zeny, zeny + @LETTER_REWARD_GOLD_INITIAL;
	getexp @LETTER_REWARD_EXP_INITIAL, 0;
	set QUEST_Graveyard_Caretaker, @Q_STATUS_DELIVERED_FIRST_LETTER;
	close;

L_Caretaker_later_rewards:
	mes "[Airlia]";
	mes "\"Oh! Thank you very, very much! Please take this for your trouble.\"";
	if (@LETTER_REWARD_GOLD > 0)
		mes "[" + @LETTER_REWARD_GOLD + " GP]";
	if (@LETTER_REWARD_EXP > 0)
		mes "[" + @LETTER_REWARD_EXP + " experience points]";

	set zeny, zeny + @LETTER_REWARD_GOLD;
	getexp @LETTER_REWARD_EXP, 0;
	set QUEST_Graveyard_Caretaker, @Q_STATUS_HAS_NO_NEW_LETTER;
	close;

L_Airlia_intro:
	mes "[Airlia]";
	mes "\"My poor father, doomed to that awful cemetery.\"";
	next;

	if (QUEST_Graveyard_Caretaker == @Q_STATUS_HAS_NO_NEW_LETTER)
		menu
			"...", -;

	if (QUEST_Graveyard_Caretaker == @Q_STATUS_HAS_NEW_LETTER)
		menu
			"...", -,
			"Oh, I have a letter from him.", L_Caretaker_later_rewards;

	mes "[Airlia]";
	mes "\"You know, there are many who believe that each time the undead rise after being killed, they lose mana.";
	mes "Eventually, there will not be enough mana for them to rise again and they can be at rest. Do you believe this is true?\"";
	next;

	menu
		"I believe so, yes.", L_Airlia_intro_mana_loss,
		"Maybe...", L_Airlia_intro_mana_loss,
		"No, that is not proven.", -;

	mes "[Airlia]";
	mes "\"Oh...\"";
	close;

L_Airlia_intro_mana_loss:
	mes "[Airlia]";
	mes "\"When I am not working, I recruit help for the esteemed Fighters of the Undead, or FoU.";
	mes "They are an official group effort of the Warriors' Guild and Magicians, you know, a very prestigious group.\"";
	next;

	menu
		"...", L_Airlia_intro_fou,
		"I have heard of them.", L_Airlia_intro_fou,
		"Keep up the good work. I have to go now, bye.", -;
	close;

L_Airlia_intro_fou:
	mes "[Airlia]";
	mes "\"If we drain those evil creatures of their mana, I can get my father back. He is getting very old. Will you help us?\"";
	next;

	menu
		"Of course I will.", L_Airlia_intro_fight,
		"Sure, I guess.", L_Airlia_intro_fight,
		"Thanks, but no thanks. I have other business to attend to.", -;
	close;

L_Airlia_intro_fight:
	mes "[Airlia]";
	mes "\"Great, just kill any of the undead creatures you can and bring me proof of your work, and I will put in a word for you with the guild.\"";
	next;

	menu
		"I'm on it.", -,
		"What sort of proof?", L_Airlia_intro_proof;

	set QUEST_Airlia, @Q_STATUS_HELP_AIRLIA;
	close;

L_Airlia_intro_proof:
	mes "[Airlia]";
	mes "\"Let's say " + @FETCH_AMOUNT_INITIAL + " [" + getitemname(@FETCH_LABEL_INITIAL$) + "]s. You don't know how much this means to me, thank you.\"";
	set QUEST_Airlia, @Q_STATUS_HELP_AIRLIA;
	close;

L_Fetch:
	mes "[Airlia]";
	mes "\"Thank you for helping my father.\"";
	next;

	if (QUEST_Airlia >= @Q_STATUS_FETCH_2L_REWARDED)
		// End of the quest was already, if you speak again to her then ....
		// ... player is warped into the crypt ;)
		warp "027-5", 39, 35;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2K_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2L + " [" + getitemname(@FETCH_LABEL_2L$) + "]s.", L_Fetch_2L_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2J_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2K + " [" + getitemname(@FETCH_LABEL_2K$) + "]s.", L_Fetch_2K_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2I_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2J + " [" + getitemname(@FETCH_LABEL_2J$) + "]s.", L_Fetch_2J_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2H_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2I + " [" + getitemname(@FETCH_LABEL_2I$) + "]s.", L_Fetch_2I_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2G_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2H + " [" + getitemname(@FETCH_LABEL_2H$) + "]s.", L_Fetch_2H_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2F_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2G + " [" + getitemname(@FETCH_LABEL_2G$) + "]s.", L_Fetch_2G_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2E_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2F + " [" + getitemname(@FETCH_LABEL_2F$) + "]s.", L_Fetch_2F_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2D_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2E + " [" + getitemname(@FETCH_LABEL_2E$) + "]s.", L_Fetch_2E_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2C_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2D + " [" + getitemname(@FETCH_LABEL_2D$) + "]s.", L_Fetch_2D_reward;

	if (QUEST_Airlia == @Q_STATUS_FETCH_2B_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_2C + " [" + getitemname(@FETCH_LABEL_2C$) + "]s.", L_Fetch_2C_reward;

	if (QUEST_Airlia == @Q_STATUS_INITIAL_FETCH_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT + " [" + getitemname(@FETCH_LABEL$) + "]s.", L_Fetch_later_rewards;

	if (QUEST_Airlia < @Q_STATUS_INITIAL_FETCH_REWARDED)
		menu
			"You are welcome.", -,
			"I have collected the " + @FETCH_AMOUNT_INITIAL + " [" + getitemname(@FETCH_LABEL_INITIAL$) + "]s.", L_Fetch_initial_reward;

	close;

L_Fetch_initial_reward:
	if (countitem(@FETCH_LABEL_INITIAL$) < @FETCH_AMOUNT_INITIAL) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Excellent work. You are definitely a great warrior. I will tell the guild of your deeds.\"";
	if (@FETCH_REWARD_GOLD_INITIAL > 0)
		mes "[" + @FETCH_REWARD_GOLD_INITIAL + " GP]";
	if (@FETCH_REWARD_EXP_INITIAL > 0)
		mes "[" + @FETCH_REWARD_EXP_INITIAL + " experience points]";
	delitem @FETCH_LABEL_INITIAL$, @FETCH_AMOUNT_INITIAL;
	set zeny, zeny + @FETCH_REWARD_GOLD_INITIAL;
	getexp @FETCH_REWARD_EXP_INITIAL, 0;
	set QUEST_Airlia, @Q_STATUS_INITIAL_FETCH_REWARDED;
	next;

	mes "[Airlia]";
	// TODO: Write the dialogue when I'm not tired...
	mes "\"Oh, before you leave. We all must do what we can to stop this tragedy.";
	mes "If you are willing to keep draining the undead of mana, I willl give you what gold I can afford as a token of my gratitude.\"";
	close;

L_Fetch_later_rewards:
	if (countitem(@FETCH_LABEL$) < @FETCH_AMOUNT) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Excellent work. You are definitely a great warrior.\"";
	if (@FETCH_REWARD_GOLD > 0)
		mes "[" + @FETCH_REWARD_GOLD + " GP]";
	if (@FETCH_REWARD_EXP > 0)
		mes "[" + @FETCH_REWARD_EXP + " experience points]";
	delitem @FETCH_LABEL$, @FETCH_AMOUNT;
	set zeny, zeny + @FETCH_REWARD_GOLD;
	getexp @FETCH_REWARD_EXP, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2B_REWARDED;
	close;

L_Fetch_2C_reward:
	if (countitem(@FETCH_LABEL_2C$) < @FETCH_AMOUNT_2C) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Wonderful work. You are a great warrior.\"";
	if (@FETCH_REWARD_GOLD_2C > 0)
		mes "[" + @FETCH_REWARD_GOLD_2C + " GP]";
	if (@FETCH_REWARD_EXP_2C > 0)
		mes "[" + @FETCH_REWARD_EXP_2C + " experience points]";
	delitem @FETCH_LABEL_2C$, @FETCH_AMOUNT_2C;
	set zeny, zeny + @FETCH_REWARD_GOLD_2C;
	getexp @FETCH_REWARD_EXP_2C, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2C_REWARDED;
	close;

L_Fetch_2D_reward:
	if (countitem(@FETCH_LABEL_2D$) < @FETCH_AMOUNT_2D) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Great job. Go on and do your best.\"";
	if (@FETCH_REWARD_GOLD_2D > 0)
		mes "[" + @FETCH_REWARD_GOLD_2D + " GP]";
	if (@FETCH_REWARD_EXP_2D > 0)
		mes "[" + @FETCH_REWARD_EXP_2D + " experience points]";
	delitem @FETCH_LABEL_2D$, @FETCH_AMOUNT_2D;
	set zeny, zeny + @FETCH_REWARD_GOLD_2D;
	getexp @FETCH_REWARD_EXP_2D, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2D_REWARDED;
	close;

L_Fetch_2E_reward:
	if (countitem(@FETCH_LABEL_2E$) < @FETCH_AMOUNT_2E) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2E > 0)
		mes "[" + @FETCH_REWARD_GOLD_2E + " GP]";
	if (@FETCH_REWARD_EXP_2E > 0)
		mes "[" + @FETCH_REWARD_EXP_2E + " experience points]";
	delitem @FETCH_LABEL_2E$, @FETCH_AMOUNT_2E;
	set zeny, zeny + @FETCH_REWARD_GOLD_2E;
	getexp @FETCH_REWARD_EXP_2E, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2E_REWARDED;
	close;

L_Fetch_2F_reward:
	if (countitem(@FETCH_LABEL_2F$) < @FETCH_AMOUNT_2F) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2F > 0)
		mes "[" + @FETCH_REWARD_GOLD_2F + " GP]";
	if (@FETCH_REWARD_EXP_2F > 0)
		mes "[" + @FETCH_REWARD_EXP_2F + " experience points]";
	delitem @FETCH_LABEL_2F$, @FETCH_AMOUNT_2F;
	set zeny, zeny + @FETCH_REWARD_GOLD_2F;
	getexp @FETCH_REWARD_EXP_2F, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2F_REWARDED;
	close;

L_Fetch_2G_reward:
	if (countitem(@FETCH_LABEL_2G$) < @FETCH_AMOUNT_2G) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2G > 0)
		mes "[" + @FETCH_REWARD_GOLD_2G + " GP]";
	if (@FETCH_REWARD_EXP_2G > 0)
		mes "[" + @FETCH_REWARD_EXP_2G + " experience points]";
	delitem @FETCH_LABEL_2G$, @FETCH_AMOUNT_2G;
	set zeny, zeny + @FETCH_REWARD_GOLD_2G;
	getexp @FETCH_REWARD_EXP_2G, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2G_REWARDED;
	close;

L_Fetch_2H_reward:
	if (countitem(@FETCH_LABEL_2H$) < @FETCH_AMOUNT_2H) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2H > 0)
		mes "[" + @FETCH_REWARD_GOLD_2H + " GP]";
	if (@FETCH_REWARD_EXP_2H > 0)
		mes "[" + @FETCH_REWARD_EXP_2H + " experience points]";
	delitem @FETCH_LABEL_2H$, @FETCH_AMOUNT_2H;
	set zeny, zeny + @FETCH_REWARD_GOLD_2H;
	getexp @FETCH_REWARD_EXP_2H, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2H_REWARDED;
	close;

L_Fetch_2I_reward:
	if (countitem(@FETCH_LABEL_2I$) < @FETCH_AMOUNT_2I) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2I > 0)
		mes "[" + @FETCH_REWARD_GOLD_2I + " GP]";
	if (@FETCH_REWARD_EXP_2I > 0)
		mes "[" + @FETCH_REWARD_EXP_2I + " experience points]";
	delitem @FETCH_LABEL_2I$, @FETCH_AMOUNT_2I;
	set zeny, zeny + @FETCH_REWARD_GOLD_2I;
	getexp @FETCH_REWARD_EXP_2I, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2I_REWARDED;
	close;

L_Fetch_2J_reward:
	if (countitem(@FETCH_LABEL_2J$) < @FETCH_AMOUNT_2J) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2J > 0)
		mes "[" + @FETCH_REWARD_GOLD_2J + " GP]";
	if (@FETCH_REWARD_EXP_2J > 0)
		mes "[" + @FETCH_REWARD_EXP_2J + " experience points]";
	delitem @FETCH_LABEL_2J$, @FETCH_AMOUNT_2J;
	set zeny, zeny + @FETCH_REWARD_GOLD_2J;
	getexp @FETCH_REWARD_EXP_2J, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2J_REWARDED;
	close;

L_Fetch_2K_reward:
	if (countitem(@FETCH_LABEL_2K$) < @FETCH_AMOUNT_2K) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Marvelous. Go on and get them.\"";
	if (@FETCH_REWARD_GOLD_2K > 0)
		mes "[" + @FETCH_REWARD_GOLD_2K + " GP]";
	if (@FETCH_REWARD_EXP_2K > 0)
		mes "[" + @FETCH_REWARD_EXP_2K + " experience points]";
	delitem @FETCH_LABEL_2K$, @FETCH_AMOUNT_2K;
	set zeny, zeny + @FETCH_REWARD_GOLD_2K;
	getexp @FETCH_REWARD_EXP_2K, 0;
	set QUEST_Airlia, @Q_STATUS_FETCH_2K_REWARDED;
	close;

L_Fetch_2L_reward:
	if (countitem(@FETCH_LABEL_2L$) < @FETCH_AMOUNT_2L) goto L_Fetch_not_enough;

	mes "[Airlia]";
	mes "\"Ah! These are the last items!\"";
	if (@FETCH_REWARD_GOLD_2L > 0)
		mes "[" + @FETCH_REWARD_GOLD_2L + " GP]";
	if (@FETCH_REWARD_EXP_2L > 0)
		mes "[" + @FETCH_REWARD_EXP_2L + " experience points]";
	delitem @FETCH_LABEL_2L$, @FETCH_AMOUNT_2L;
	set zeny, zeny + @FETCH_REWARD_GOLD_2L;
	getexp @FETCH_REWARD_EXP_2L, 0;
	getitem 1228, 1; // Silver Four-Leaf-Amulett
	mes "\"Your are now part of the FoU! Take the Silver Four-Leaf-Amulett as our Symbol!\"";
	set QUEST_Airlia, @Q_STATUS_FETCH_2L_REWARDED;
	close;

L_Fetch_not_enough:
	mes "[Airlia]";
	mes "\"I'm sorry, I didn't realize you couldn't count. Perhaps when I have some free time, I can help you learn if you'd like.\"";
	close;

L_Rewarded:
	mes "[Airlia]";
	mes "\"Thank you for your help.\"";
	next;

	if (QUEST_Graveyard_Caretaker < @Q_STATUS_HAS_NEW_LETTER)
		menu
			"I have collected the " + @FETCH_AMOUNT + " [" + getitemname(@FETCH_LABEL$) + "]s.", L_Fetch_later_rewards;

	if (QUEST_Graveyard_Caretaker == @Q_STATUS_HAS_NEW_LETTER)
		menu
			"I have another letter from your father.", L_Caretaker_later_rewards,
			"I have collected the " + @FETCH_AMOUNT + " [" + getitemname(@FETCH_LABEL$) + "]s.", L_Fetch_later_rewards;

	close;
}

